/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme.clanskeKarte;

import domen.ClanskaKarta;
import domen.Zaposleni;
import forme.MeniForma;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import modeli.ModelTabeleClanskeKarte;
import sesija.Sesija;
import transfer.ServerskiOdgovor;

/**
 *
 * @author hasan
 */
public class ObnavljanjeClanskeKarte extends javax.swing.JFrame {

    
    List<ClanskaKarta> listaSvihKarti;
    List<ClanskaKarta> listaSaKriterijumom;
    String porukaNeg = "Članske karte nisu pronađene.";
    String porukaPoz = "Članske karte su pronađene.";
    Zaposleni z;
    ClanskaKarta trenutnaClanskaKarta;
    /**
     * Creates new form ObnavljanjeClanskeKarte
     */
    public ObnavljanjeClanskeKarte() {
        initComponents();
        this.setTitle("Obnavljanje članske karte");

        z = Sesija.getInstanca().getZaposleni();
        srediFormu();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        btnNazad = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClanske = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtImePrezime = new javax.swing.JTextField();
        btnPretraziPoImenu = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtKategorija = new javax.swing.JTextField();
        btnPretraziPoKategoriji = new javax.swing.JButton();
        btnOtvori = new javax.swing.JButton();
        panelObnovi = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txtImePrezime1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtKategorija1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        datDatum = new com.toedter.calendar.JDateChooser();
        btnObnovi = new javax.swing.JButton();

        jLabel3.setText("jLabel3");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnNazad.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        btnNazad.setText("<- Nazad");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(235, 232, 221));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblClanske.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblClanske);

        jLabel1.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        jLabel1.setText("Ime i prezime:");

        btnPretraziPoImenu.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        btnPretraziPoImenu.setText("Pretraži");
        btnPretraziPoImenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziPoImenuActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        jLabel2.setText("Kategorija: ");

        btnPretraziPoKategoriji.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        btnPretraziPoKategoriji.setText("Pretraži");
        btnPretraziPoKategoriji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziPoKategorijiActionPerformed(evt);
            }
        });

        btnOtvori.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        btnOtvori.setText("Otvori člansku kartu");
        btnOtvori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOtvoriActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(136, 136, 136)
                            .addComponent(btnOtvori, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(46, 46, 46)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtImePrezime, javax.swing.GroupLayout.DEFAULT_SIZE, 194, Short.MAX_VALUE)
                            .addComponent(txtKategorija))
                        .addGap(51, 51, 51)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPretraziPoKategoriji, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnPretraziPoImenu, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtImePrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPretraziPoImenu))
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnPretraziPoKategoriji)
                    .addComponent(txtKategorija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnOtvori, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        panelObnovi.setBackground(new java.awt.Color(235, 232, 221));
        panelObnovi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        jLabel4.setText("Ime i prezime:");

        jLabel5.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        jLabel5.setText("Kategorija: ");

        jLabel6.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        jLabel6.setText("Datum važenja:");

        btnObnovi.setFont(new java.awt.Font("Lucida Bright", 0, 13)); // NOI18N
        btnObnovi.setText("Obnovi člansku kartu");
        btnObnovi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObnoviActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelObnoviLayout = new javax.swing.GroupLayout(panelObnovi);
        panelObnovi.setLayout(panelObnoviLayout);
        panelObnoviLayout.setHorizontalGroup(
            panelObnoviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelObnoviLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelObnoviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(28, 28, 28)
                .addGroup(panelObnoviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelObnoviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(txtImePrezime1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtKategorija1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(datDatum, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelObnoviLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnObnovi, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72))
        );
        panelObnoviLayout.setVerticalGroup(
            panelObnoviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelObnoviLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(panelObnoviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtImePrezime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(panelObnoviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtKategorija1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(panelObnoviLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(datDatum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(btnObnovi, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNazad)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(panelObnovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNazad)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelObnovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(74, 74, 74))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        MeniForma mf = new MeniForma();
        mf.setUlogovaniZaposleni(z);
        mf.srediIzgled();
        mf.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnNazadActionPerformed

    private void btnPretraziPoImenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziPoImenuActionPerformed
        String imePrezimeKriterijum = txtImePrezime.getText().trim();
        if(imePrezimeKriterijum.isEmpty()){
            JOptionPane.showMessageDialog(this, "Morate da unesete ime ili prezime.");
            return;
        }
        
        listaSaKriterijumom = new ArrayList<>();
        ClanskaKarta ck = new ClanskaKarta(-1, imePrezimeKriterijum, "", null, z.getZaposleniID());
        ServerskiOdgovor so = Kontroler.getInstanca().pretraziClanskeKarte(ck);
        if(so != null && so.getParametar()!=null){
            ModelTabeleClanskeKarte mtck = (ModelTabeleClanskeKarte) tblClanske.getModel();
            mtck.isprazniListu();
            listaSaKriterijumom = (List<ClanskaKarta>) so.getParametar();
            mtck.setLista(listaSaKriterijumom);
            if(listaSaKriterijumom.size() == 0){
                JOptionPane.showMessageDialog(this,porukaNeg+"Ne postoje članske karte koje se vode na uneseno ime ili prezime.");
                return;
            }else{
                JOptionPane.showMessageDialog(this,porukaPoz);

            }
        }
    }//GEN-LAST:event_btnPretraziPoImenuActionPerformed

    private void btnPretraziPoKategorijiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziPoKategorijiActionPerformed
        String kategorijaKriterijum = txtKategorija.getText().trim();
        if(kategorijaKriterijum.isEmpty()){
            JOptionPane.showMessageDialog(this, "Morate da unesete kategoriju.");
            return;
        }
         listaSaKriterijumom = new ArrayList<>();
        ClanskaKarta ck = new ClanskaKarta(-1, "", kategorijaKriterijum, null, z.getZaposleniID());
        ServerskiOdgovor so = Kontroler.getInstanca().pretraziClanskeKarte(ck);
        if(so != null && so.getParametar()!=null){
            ModelTabeleClanskeKarte mtck = (ModelTabeleClanskeKarte) tblClanske.getModel();
            mtck.isprazniListu();
            listaSaKriterijumom = (List<ClanskaKarta>) so.getParametar();
            mtck.setLista(listaSaKriterijumom);
            if(listaSaKriterijumom.size() == 0){
                JOptionPane.showMessageDialog(this,porukaNeg+"Ne postoje članske karte koje spadaju u biranu kategoriju.");
                return;
            }else{
                JOptionPane.showMessageDialog(this,porukaPoz);

            }
        }
    }//GEN-LAST:event_btnPretraziPoKategorijiActionPerformed

    private void btnOtvoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOtvoriActionPerformed

        int red = tblClanske.getSelectedRow();
        if(red == -1){
            JOptionPane.showMessageDialog(this,"Članska karta nije pronađena!.");
            return;
        }
        ModelTabeleClanskeKarte mtck = (ModelTabeleClanskeKarte) tblClanske.getModel();
        ClanskaKarta ck = mtck.vratiClanskuKartu(red);
        setSize(new Dimension(920, 500));

        panelObnovi.setVisible(true);
        ServerskiOdgovor so = Kontroler.getInstanca().vratiClanskuKartu(ck);
        if (so != null && so.getParametar() != null) {
            ck = (ClanskaKarta) so.getParametar();
            trenutnaClanskaKarta = ck;
            
            txtImePrezime1.setText(ck.getImePrezime());
            txtImePrezime1.setEditable(false);
            txtKategorija1.setText(ck.getPosebnaKategorija());
            txtKategorija1.setEditable(false);
            
            JOptionPane.showMessageDialog(this,"Uspešno pronađena članska karta.");
        }else{
            JOptionPane.showMessageDialog(this,"Članska karta nije pronađena.");
            return;
        }
    }//GEN-LAST:event_btnOtvoriActionPerformed

    private void btnObnoviActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObnoviActionPerformed
        String imePrezime = txtImePrezime1.getText();
        String kategorija = txtKategorija1.getText();
        if(imePrezime.isEmpty() || kategorija.isEmpty()){
            JOptionPane.showMessageDialog(this, "Polja ne smeju da budu prazna. Članska karta je loše učitana.");
            return;
        }
        Date datum = datDatum.getDate();
        Date pocetniDatum = trenutnaClanskaKarta.getDatumVazenja();
        if(datum == null){
            JOptionPane.showMessageDialog(this, "Morate da popunite polje datum važenja.");
            return;
        }
        if(datum.before(pocetniDatum) || datum == pocetniDatum){
            JOptionPane.showMessageDialog(this, "Promenjeni datum važenja ne može da bude pre starog datuma.");
            return;
        }
        Calendar kal1 = Calendar.getInstance();
        Calendar kal2 = Calendar.getInstance();

        kal1.setTime(datum);
        kal2.setTime(new Date());
        if (kal1.get(Calendar.YEAR) != kal2.get(Calendar.YEAR) + 1) {
            String p = "Godina važenja mora biti sledeće godine.";
            JOptionPane.showMessageDialog(this, p);
            return;
        }
        ClanskaKarta ck = new ClanskaKarta(trenutnaClanskaKarta.getClanskaKartaID(), imePrezime, kategorija, datum, z.getZaposleniID());
        ServerskiOdgovor so = Kontroler.getInstanca().zapamtiClanskuKartu(ck);
        if(so != null && so.isUspesno()){
              JOptionPane.showMessageDialog(this, "Uspešno ste ažurilali člansku kartu!");
              srediFormu();
              
              
        }else{
            JOptionPane.showMessageDialog(this, "Ažuriranje nije uspelo!");

        }
        
    }//GEN-LAST:event_btnObnoviActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ObnavljanjeClanskeKarte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ObnavljanjeClanskeKarte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ObnavljanjeClanskeKarte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ObnavljanjeClanskeKarte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ObnavljanjeClanskeKarte().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnObnovi;
    private javax.swing.JButton btnOtvori;
    private javax.swing.JButton btnPretraziPoImenu;
    private javax.swing.JButton btnPretraziPoKategoriji;
    private com.toedter.calendar.JDateChooser datDatum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelObnovi;
    private javax.swing.JTable tblClanske;
    private javax.swing.JTextField txtImePrezime;
    private javax.swing.JTextField txtImePrezime1;
    private javax.swing.JTextField txtKategorija;
    private javax.swing.JTextField txtKategorija1;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        setSize(new Dimension(550,500));

        panelObnovi.setVisible(false);
        ModelTabeleClanskeKarte mtck = new ModelTabeleClanskeKarte();
        tblClanske.setModel(mtck);
        ClanskaKarta ck = new ClanskaKarta(-1, "", "", null, z.getZaposleniID());
        ServerskiOdgovor so = Kontroler.getInstanca().vratiListuClanskihKarata(ck);
        listaSvihKarti = (List<ClanskaKarta>) so.getParametar();
        if (so != null && listaSvihKarti != null) {
           mtck.setLista(listaSvihKarti);

        }else{
            JOptionPane.showMessageDialog(this,"Greska u ucitavanju clanskih karata.");
            btnOtvori.setEnabled(false);
            return;
        }
        
        
    }
}
